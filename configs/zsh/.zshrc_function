### GIT ###
grew() {
  git rebase HEAD~"$1" -i;
}

gdn() {
  git diff -- $(git ls-files --modified | sed -n "$1p")
}

gcn() {
  git checkout -- $(git ls-files --modified | sed -n "$1p")
}

grn() {
  git reset -- $(git ls-files --modified | sed -n "$1p")
}

### Checkout on previous branch
previous() {
  branchCount="${1:-10}"

  if [[ "$branchCount" != <-> ]]; then
    echo -en 'Numeric value must be in parameter'
    return 0
  fi

  for i in {1..$branchCount}; do
    echo -n "@{-$i} - "
    git rev-parse --abbrev-ref "@{-$i}"
  done

  echo -en 'Enter commit number(n/q for cancel): '; read -r
  if [[ "$REPLY" != 'n' ]] && [[ "$REPLY" != 'q' ]]; then
    git checkout $(git rev-parse --abbrev-ref "@{-$REPLY}")
  fi
}

### Interactive managment for git stash
stash() {
   git stash list

   echo -en 'Enter stash number(n/q for cancel): '; read -r
   if [[ "$REPLY" != 'n' ]] && [[ "$REPLY" != 'q' ]]; then
     git stash show -p "stash@{$REPLY}"
   else
     return;
   fi

   stashNumber="$REPLY"

   echo -en 'What should do with this stash?(d - delete, a - apply, p - pop, n/q for cancel): '; read -r
   if [[ "$REPLY" == 'n' ]] && [[ "$REPLY" == 'q' ]]; then
     return;
   elif [[ "$REPLY" == 'd' ]]; then
     git stash drop "stash@{$stashNumber}"
   elif [[ "$REPLY" == 'p' ]]; then
     git stash pop "stash@{$stashNumber}"
   elif [[ "$REPLY" == 'a' ]]; then
     git stash apply "stash@{$stashNumber}"
   fi
}

### FZF ###
### Find in files
fif() {
  if [ ! "$#" -gt 0 ]; then echo "Need a string to search for!"; return 1; fi
  rg --files-with-matches --no-messages "$1" | fzf --preview "highlight -O ansi -l {} 2> /dev/null | rg --colors 'match:bg:yellow' --ignore-case --pretty --context 10 '$1' || rg --ignore-case --pretty --context 10 '$1' {}"
}

### Interactive history
fh() {
  print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed -r 's/ *[0-9]*\*? *//' | sed -r 's/\\/\\\\/g')
}

### Interactive pid kill
fkill() {
    local pid
    if [ "$UID" != "0" ]; then
        pid=$(ps -f -u $UID | sed 1d | fzf -m | awk '{print $2}')
    else
        pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')
    fi

    if [ "x$pid" != "x" ]
    then
        echo $pid | xargs kill -${1:-9}
    fi
}

### FZF DOCKER ###
### Docker container start and attach
function da() {
  local cid
  cid=$(docker ps -a | sed 1d | fzf -1 -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker start "$cid" && docker attach "$cid"
}

### Docker container stop
function ds() {
  local cid
  cid=$(docker ps | sed 1d | fzf -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker stop "$cid"
}

### Docker container remove
function drm() {
  local cid
  cid=$(docker ps -a | sed 1d | fzf -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker rm "$cid"
}
